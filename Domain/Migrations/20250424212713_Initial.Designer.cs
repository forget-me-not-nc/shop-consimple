// <auto-generated />
using System;
using Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20250424212713_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Toys",
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8793)
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Electronics",
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8794)
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Books",
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8795)
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Clothing",
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8795)
                        });
                });

            modelBuilder.Entity("Domain.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8896),
                            FirstName = "John",
                            FullName = "John Doe",
                            LastName = "Doe",
                            RegistrationDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8899)
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8899),
                            FirstName = "Jane",
                            FullName = "Jane Smith",
                            LastName = "Smith",
                            RegistrationDate = new DateTime(2025, 4, 9, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8900)
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1992, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8905),
                            FirstName = "Alice",
                            FullName = "Alice Johnson",
                            LastName = "Johnson",
                            RegistrationDate = new DateTime(2025, 3, 25, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8906)
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1988, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8906),
                            FirstName = "Bob",
                            FullName = "Bob Williams",
                            LastName = "Williams",
                            RegistrationDate = new DateTime(2025, 3, 20, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8907)
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1995, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8907),
                            FirstName = "Emma",
                            FullName = "Emma Brown",
                            LastName = "Brown",
                            RegistrationDate = new DateTime(2025, 3, 5, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8908)
                        });
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("OrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8918),
                            Currency = 1,
                            OrderNumber = "ORD-001",
                            OrderValue = 89.98m
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8922),
                            Currency = 1,
                            OrderNumber = "ORD-002",
                            OrderValue = 29.00m
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8923),
                            Currency = 1,
                            OrderNumber = "ORD-003",
                            OrderValue = 303.70m
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8924),
                            Currency = 1,
                            OrderNumber = "ORD-004",
                            OrderValue = 29.99m
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 5,
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8924),
                            Currency = 1,
                            OrderNumber = "ORD-005",
                            OrderValue = 39.98m
                        });
                });

            modelBuilder.Entity("Domain.Models.OrderProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderProducts", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            OrderId = 1,
                            Currency = 1,
                            Quantity = 1,
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            ProductId = 2,
                            OrderId = 1,
                            Currency = 1,
                            Quantity = 1,
                            UnitPrice = 59.99m
                        },
                        new
                        {
                            ProductId = 3,
                            OrderId = 2,
                            Currency = 1,
                            Quantity = 2,
                            UnitPrice = 14.50m
                        },
                        new
                        {
                            ProductId = 5,
                            OrderId = 3,
                            Currency = 1,
                            Quantity = 3,
                            UnitPrice = 11.25m
                        },
                        new
                        {
                            ProductId = 1,
                            OrderId = 3,
                            Currency = 1,
                            Quantity = 1,
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            ProductId = 2,
                            OrderId = 3,
                            Currency = 1,
                            Quantity = 4,
                            UnitPrice = 59.99m
                        },
                        new
                        {
                            ProductId = 1,
                            OrderId = 4,
                            Currency = 1,
                            Quantity = 1,
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            ProductId = 4,
                            OrderId = 5,
                            Currency = 1,
                            Quantity = 2,
                            UnitPrice = 19.99m
                        });
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductDeclarationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8879),
                            Currency = 1,
                            Price = 29.99m,
                            ProductDeclarationName = "Ergonomic Wireless Mouse",
                            ProductTitle = "Wireless Mouse",
                            SKU = "SKU-MOUSE-001"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8882),
                            Currency = 1,
                            Price = 59.99m,
                            ProductDeclarationName = "Over-Ear Bluetooth Headphones",
                            ProductTitle = "Bluetooth Headphones",
                            SKU = "SKU-HEAD-002"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8883),
                            Currency = 1,
                            Price = 14.50m,
                            ProductDeclarationName = "Adjustable Smartphone Desk Stand",
                            ProductTitle = "Smartphone Stand",
                            SKU = "SKU-STAND-003"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8884),
                            Currency = 1,
                            Price = 19.99m,
                            ProductDeclarationName = "Creative Kids Building Blocks",
                            ProductTitle = "Building Blocks Set",
                            SKU = "SKU-BLOCKS-004"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreateDate = new DateTime(2025, 4, 24, 21, 27, 13, 182, DateTimeKind.Utc).AddTicks(8885),
                            Currency = 1,
                            Price = 11.25m,
                            ProductDeclarationName = "Wooden Animal Puzzle for Kids",
                            ProductTitle = "Educational Puzzle",
                            SKU = "SKU-PUZZLE-005"
                        });
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.HasOne("Domain.Models.Client", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.Models.OrderProduct", b =>
                {
                    b.HasOne("Domain.Models.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.HasOne("Domain.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
